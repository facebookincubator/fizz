/* This file was generated by KreMLin <https://github.com/FStarLang/kremlin>
 * KreMLin invocation: /Users/bhargava/Desktop/repositories/kremlin/krml -funroll-loops 8 -warn-error +9 -I /Users/bhargava/Desktop/repositories/hacl-star//lib/ -I /Users/bhargava/Desktop/repositories/hacl-star//lib/fst -I /Users/bhargava/Desktop/repositories/kremlin/kremlib -I /Users/bhargava/Desktop/repositories/hacl-star//specs -I . -I /Users/bhargava/Desktop/repositories/hacl-star//code/experimental/aes -I /Users/bhargava/Desktop/repositories/hacl-star//code/experimental/gf128 -ccopt -march=native -fbuiltin-uint128 -drop FStar.UInt128 -fnocompound-literals -fparentheses -fcurly-braces -tmpdir aesgcm-ni-c aesgcm-ni-c/out.krml -skip-compilation -minimal -add-include "kremlib.h" -add-include "vec128.h" -drop Lib.Vec128 -bundle Hacl.AesGCM.NI=*
 * F* version: 518dde40
 * KreMLin version: d94ac163
 */


#ifndef __Hacl_AesGCM_NI_H
#define __Hacl_AesGCM_NI_H

#include <stdlib.h>
#include <string.h>
#include "endianness.h"
#include "vec128.h"

typedef Lib_Vec128_vec128 Hacl_AesGCM_NI_aes_gcm_ctx[22];

void Hacl_AesGCM_NI_aes128_gcm_init(Lib_Vec128_vec128 *ctx, uint8_t *key, uint8_t *nonce);

void
Hacl_AesGCM_NI_aes128_gcm_encrypt(
  Lib_Vec128_vec128 *ctx,
  uint32_t len,
  uint8_t *out,
  uint8_t *text,
  uint32_t aad_len,
  uint8_t *aad
);

bool
Hacl_AesGCM_NI_aes128_gcm_decrypt(
  Lib_Vec128_vec128 *ctx,
  uint32_t len,
  uint8_t *out,
  uint8_t *cipher,
  uint32_t aad_len,
  uint8_t *aad
);

#define __Hacl_AesGCM_NI_H_DEFINED
#endif
