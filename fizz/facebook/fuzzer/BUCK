load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")
load(
    "@fbsource//xplat/security/lionhead:defs.bzl",
    "EXTERNAL_USERS",
    "Metadata",
    "Severity",
)
load("//security/lionhead/harnesses:defs.bzl", "cpp_lionhead_harness")

oncall("secure_pipes")

cpp_library(
    name = "fuzz_aead",
    srcs = ["FuzzAead.cpp"],
    headers = ["FuzzAead.h"],
    deps = [
        "//fizz:config",
        "//fizz/backend:openssl",
        "//fizz/crypto/aead:aegiscipher",
        "//fizz/crypto/aead/test:mocks",
    ],
    exported_deps = [
        "//fizz/crypto/aead:aead",
        "//fizz/record:record",
    ],
)

cpp_library(
    name = "fuzz_handshake_context",
    srcs = ["FuzzHandshakeContext.cpp"],
    headers = ["FuzzHandshakeContext.h"],
    deps = [
        "//fizz/backend:openssl",
    ],
    exported_deps = [
        "//fizz/protocol:handshake_context",
        "//fizz/record:record",
    ],
)

cpp_library(
    name = "fuzz_token_cipher",
    headers = ["FuzzTokenCipher.h"],
    exported_deps = [
        "//fizz/server/test:mocks",
    ],
)

cpp_library(
    name = "fuzz_factory",
    headers = ["FuzzFactory.h"],
    exported_deps = [
        "//fizz/protocol/test:mocks",
    ],
)

cpp_library(
    name = "fuzz_server_context_builder",
    srcs = ["FuzzServerContextBuilder.cpp"],
    headers = ["FuzzServerContextBuilder.h"],
    deps = [
        ":fuzz_aead",
        ":fuzz_factory",
        ":fuzz_handshake_context",
        ":fuzz_token_cipher",
        "//fizz/crypto/hpke/test:mocks",
        "//fizz/protocol/test:test_messages",
        "//fizz/record:record",
        "//fizz/server:aead_cookie_cipher",
        "//fizz/server:aead_ticket_cipher",
        "//fizz/server:aead_token_cipher",
        "//fizz/server:dual_ticket_cipher",
        "//fizz/server:ticket_codec",
        "//fizz/server/test:mocks",
    ],
    exported_deps = [
        "//fizz/server:fizz_server_context",
    ],
)

cpp_lionhead_harness(
    name = "FizzServerFuzzer",
    srcs = ["FizzServerFuzzer.cpp"],
    context_task = "T144013895",
    metadata = Metadata(
        exposure = EXTERNAL_USERS,
        project = "oncall_secure_pipes",
        severity_denial_of_service = Severity.FILE_SECURITY_SEV,
        severity_service_takeover = Severity.FILE_SECURITY_SEV,
    ),
    deps = [
        "fbsource//xplat/security/lionhead:utils",
        ":fuzz_server_context_builder",
        "//fizz/server:fizz_server",
        "//folly/io/async:async_base",
    ],
)

cpp_lionhead_harness(
    name = "FizzClientFuzzer",
    srcs = ["FizzClientFuzzer.cpp"],
    context_task = "T131981406",  #TODO: This is a template task. Please create your own copy and insert meaningful context for this fuzzer. Otherwise, security engineers will not know how to handle security issues found by this harness.
    metadata = Metadata(
        exposure = EXTERNAL_USERS,
        project = "oncall_secure_pipes",
        severity_denial_of_service = Severity.FILE_SECURITY_TASK,  # missing severity, using default TODO: check and apply appropriate severity
        severity_service_takeover = Severity.FILE_SECURITY_TASK,  # missing severity, using default TODO: check and apply appropriate severity
    ),
    deps = [
        ":fuzz_factory",
        "//fizz/client:fizz_client",
        "//fizz/client/test:mocks",
        "//fizz/client/test:utilities",
    ],
    external_deps = [
        "gflags",
        "glog",
    ],
)
